terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 4.0"
    }
  }
}

provider "aws" {
  region     = "us-east-1"
  access_key = var.aws_access_key
  secret_key = var.aws_secret_access_key
}

#1 Create a VPC
resource "aws_vpc" "vpc1" {
  cidr_block           = "10.0.0.0/16"
  enable_dns_hostnames = true
  tags = {
    Name = "vpc1"
  }
}
#2 internet gateway
resource "aws_internet_gateway" "test-gw" {
  vpc_id = aws_vpc.vpc1.id

  tags = {
    Name = "test-gw"
  }
}

#3 route table
resource "aws_route_table" "test-rt" {
  vpc_id = aws_vpc.vpc1.id
  route {
    cidr_block = "10.0.1.0/24"
    gateway_id = aws_internet_gateway.test-gw.id
  }

  tags = {
    Name = "test-rt"
  }
}

resource "aws_route_table_association" "test-rta" {
  subnet_id      = aws_subnet.sub1.id
  route_table_id = aws_route_table.test-rt.id
}

#4 security group
resource "aws_security_group" "test_sg" {
  name        = "test_sg"
  description = "test security group"
  vpc_id      = aws_vpc.vpc1.id

  ingress {
    description = "testsg-VPC"
    from_port   = 443
    to_port     = 443
    protocol    = "tcp"
    cidr_blocks = [aws_vpc.vpc1.cidr_block]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = {
    Name = "test_sg"
  }
}
#5 subnet
resource "aws_subnet" "sub1" {
  cidr_block        = "10.0.1.0/24"
  vpc_id            = aws_vpc.vpc1.id
  availability_zone = "us-east-1"

  tags = {
    Name = "sub1"
  }
}
#6 instance
resource "aws_instance" "test1" {
  count         = 1
  ami           = "ami-09d3b3274b6c5d4aa"
  instance_type = var.new_instance_type
  subnet_id     = aws_subnet.sub1.id

  tags = var.instance_tags
}
